#include <SoftwareSerial.h>
#include <Wire.h>
#include <hd44780.h>                       // main hd44780 header
#include <hd44780ioClass/hd44780_I2Cexp.h> // i2c expander i/o class header

hd44780_I2Cexp lcd; // declare lcd object: auto locate & auto config expander chip

SoftwareSerial Arduino_SoftSerial(10,11);
//declare global variable
char c;
String dataIn;
const int LCD_COLS = 16;
const int LCD_ROWS = 2;
const int button=1;
const int relay_pump=2;

int relay1 = 0;

void setup() {
  // put your setup code here, to run once:
  // Open Serial Communication (Arduino - PC)
  Serial.begin(57600);

  //Open Serial communication ( Arduino- NodeMCU)
  Arduino_SoftSerial.begin(9600);
  int status;
  status = lcd.begin(LCD_COLS, LCD_ROWS);
	if(status) // non zero status means it was unsuccesful
	{
		// hd44780 has a fatalError() routine that blinks an led if possible
		// begin() failed so blink error code using the onboard LED if possible
		hd44780::fatalError(status); // does not return
	}
  pinMode(button, INPUT);
  pinMode(relay_pump, OUTPUT);
  
}

void loop() {
  // put your main code here, to run repeatedly:
  float humidity;
  float temperature;
  int percentValue;
  int relay;
  String temp, temp1, temp2; 
  int count = 0;

  while(Arduino_SoftSerial.available() > 0){
       c = Arduino_SoftSerial.read();
       if(c=='\n'){
           break;
       }
       else
       {
           dataIn+=c;
           if( c == '\t'){
                if(count == 0){
                  //humidity = dataIn;
                  humidity = atof(dataIn.c_str());
                  Serial.println(humidity);
                  count++;
                }
                else if( count == 1){
                  temp = dataIn.substring(5) ;
                  temperature = atof(temp.c_str());
                  Serial.println(temperature);
                  count++;
                }
                else if( count == 2){

                  temp1 = dataIn.substring(10) ;
                  percentValue = temp1.toInt();
                  Serial.println(percentValue);
                  count++;
                }
                
           }
       }
  }
  if(c== '\n'){
    //Show incoming data to serial monitor
    temp2 = dataIn.substring(14) ;
    relay = temp2.toInt();
    Serial.println(relay);
    Serial.println(dataIn);
    c = 0;
    count = 0;
    dataIn = "";
  }
  lcd.setCursor(0, 0);
  lcd.print("Soil Moisture");
  lcd.setCursor(0, 1);  
  lcd.print("Percent: ");
  lcd.print(percentValue);
  lcd.print("%");
  delay(2000);
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("Temp: ");
  lcd.print(temperature);
  lcd.print("C");
  lcd.setCursor(0, 1);
  lcd.print("Humidity: ");
  lcd.print(humidity);
  lcd.print("%");
  delay(3000);
  lcd.setCursor(0, 0);
  if(relay == 1){
       lcd.print("Relay ON");
  }
  else{
    lcd.print("Relay OFF");
  }
  
  lcd.clear();

  if(relay == 1){
    digitalWrite(relay_pump, HIGH);
    relay1++;
    if(relay1 == 3){
      relay1 = 0;
      digitalWrite(relay_pump, LOW);
    }
  }
  else{
    digitalWrite(relay_pump, LOW);   
  }
}
